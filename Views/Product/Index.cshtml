@model ProductListViewModel
@{
	ViewData["Title"] = "Product Listings";
}

<h2>Product Listings</h2>

<a asp-action="Create" asp-controller="Product" class="btn btn-secondary">
	Create Product
</a>

<form method="get" asp-action="Index" class="row g-3 mb-4">
	<div class="col-md-4">
		<label for="searchTerm" class="form-label">Title Contains</label>
		<input type="text" class="form-control" id="searchTerm" name="searchTerm" value="@Model.SearchTerm" />
	</div>
	<div class="col-md-2">
		<label for="minPrice" class="form-label">Min Price</label>
		<input type="number" step="0.01" class="form-control" id="minPrice" name="minPrice" value="@Model.MinPrice?" />
	</div>
	<div class="col-md-2">
		<label for="maxPrice" class="form-label">Max Price</label>
		<input type="number" step="0.01" class="form-control" id="maxPrice" name="maxPrice" value="@Model.MaxPrice?" />
	</div>
	<div class="col-md-4 d-flex align-items-end gap-2">
		<button type="submit" class="btn btn-primary">Filter</button>
		<a asp-action="Index" class="btn btn-secondary">Clear</a>
	</div>
</form>

@if (TempData["Message"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		@TempData["Message"]
		<button type="button" class="btn-close" data-bs-dismiss="alert"
				aria-label="Close"></button>
	</div>
}

@if (!Model.Products.Any())
{
	<p>No products are currently found</p>
}
else
{
<table class="table table-striped">
	<thead>
		<tr>
			<th>Title)</th>
			<th>Price)</th>
			<th>Links</th>
		</tr>
	</thead>
	<tbody>
		@foreach (Product product in Model.Products)
		{
			<tr>
				<td>@Html.DisplayFor(p => product.Title)</td>
				<td>@Html.DisplayFor(p => product.Price)</td>
				<td>
					<a class="btn btn-primary" asp-controller="Product" asp-action="Edit" asp-route-id="@product.ProductId">Update</a>					
					<a class="btn btn-danger" asp-controller="Product" asp-action="Delete" asp-route-id="@product.ProductId">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
<nav aria-label="Product pages">
	<ul class="pagination">
		<li class="page-item" @(Model.CurrentPage == 1 ? "disabled" : "")>
				<a class="page-link" asp-action="Index" asp-route-page="1" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">First</a>
		</li>
		<li class="page-item" @(Model.CurrentPage == 1 ? "disabled" : "")>
				<a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">Previous</a>
		</li>
		@for (int i = 1; i <= Model.TotalPages; i++)
		{
			<li class="page-item" @(i == Model.CurrentPage ? "active" : "")>
					<a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">@i</a>
			</li>
	    }
		<li class="page-item" @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")>
				<a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">Next</a>
		</li>
		<li class="page-item" @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")>
				<a class="page-link" asp-action="Index" asp-route-page="@(Model.TotalPages)" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">Last</a>
		</li>
	</ul>
	<p>Page @Model.CurrentPage of @Model.TotalPages (Total Items: @Model.TotalItems)</p>
</nav>
}
